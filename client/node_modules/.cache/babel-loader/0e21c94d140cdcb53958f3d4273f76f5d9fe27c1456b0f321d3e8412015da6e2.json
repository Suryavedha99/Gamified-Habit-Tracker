{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\CascadeProjects\\\\gamified-habit-tracker\\\\client\\\\src\\\\pages\\\\Challenges.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Paper, Typography, Box, Card, CardContent, CardActions, Button, LinearProgress, Chip, Avatar, List, ListItem, ListItemAvatar, ListItemText, Tab, Tabs, Alert } from '@mui/material';\nimport { EmojiEvents as TrophyIcon, Star as StarIcon, Group as GroupIcon } from '@mui/icons-material';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport axios from 'axios';\nimport { useAuth } from 'context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Challenges = () => {\n  _s();\n  const {\n    token,\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [challenges, setChallenges] = useState([]);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [activeTab, setActiveTab] = useState(0);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    if (token) {\n      fetchChallenges();\n      fetchLeaderboard();\n    }\n  }, [token]);\n  const fetchChallenges = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/challenges/active', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setChallenges(response.data);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching challenges:', error);\n      setError('Failed to load challenges. Please try again later.');\n    }\n  };\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/achievements/leaderboard', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setLeaderboard(response.data);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching leaderboard:', error);\n      setError('Failed to load leaderboard. Please try again later.');\n    }\n  };\n  const joinChallenge = async challengeId => {\n    try {\n      await axios.post(`http://localhost:5000/api/challenges/${challengeId}/join`, {}, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      await fetchChallenges();\n      setSuccess('Successfully joined the challenge!');\n      setError('');\n    } catch (error) {\n      console.error('Error joining challenge:', error);\n      setError('Failed to join challenge. Please try again.');\n    }\n  };\n  const updateProgress = async (challengeId, progress) => {\n    try {\n      await axios.post(`http://localhost:5000/api/challenges/${challengeId}/progress`, {\n        progress\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      await fetchChallenges();\n      setSuccess('Progress updated successfully!');\n      setError('');\n    } catch (error) {\n      console.error('Error updating progress:', error);\n      setError('Failed to update progress. Please try again.');\n    }\n  };\n  const isParticipating = challenge => {\n    if (!user) return false;\n    return challenge.participants.some(p => p.user._id === user.id);\n  };\n  const getProgress = challenge => {\n    var _participant$progress;\n    if (!user) return 0;\n    const participant = challenge.participants.find(p => p.user._id === user.id);\n    return (_participant$progress = participant === null || participant === void 0 ? void 0 : participant.progress) !== null && _participant$progress !== void 0 ? _participant$progress : 0;\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 3,\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        color: \"error\",\n        children: \"Please log in to view challenges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => navigate('/auth'),\n        sx: {\n          mt: 2\n        },\n        children: \"Go to Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 1200,\n      mx: 'auto',\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Challenges & Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      value: activeTab,\n      onChange: (_, newValue) => setActiveTab(newValue),\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Active Challenges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        label: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: [error && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: -20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: -20\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          onClose: () => setError(''),\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), success && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: -20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        exit: {\n          opacity: 0,\n          y: -20\n        },\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mb: 2\n          },\n          onClose: () => setSuccess(''),\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      mode: \"wait\",\n      children: activeTab === 0 ? /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: -20\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        exit: {\n          opacity: 0,\n          x: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: challenges.map(challenge => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: 'flex',\n                    alignItems: 'center',\n                    mb: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(TrophyIcon, {\n                    color: \"primary\",\n                    sx: {\n                      mr: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: challenge.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  color: \"textSecondary\",\n                  paragraph: true,\n                  children: challenge.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mb: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Chip, {\n                    icon: /*#__PURE__*/_jsxDEV(StarIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 33\n                    }, this),\n                    label: `${challenge.reward.experiencePoints} XP`,\n                    color: \"primary\",\n                    variant: \"outlined\",\n                    size: \"small\",\n                    sx: {\n                      mr: 1\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 25\n                  }, this), challenge.reward.badge && /*#__PURE__*/_jsxDEV(Chip, {\n                    label: `Badge: ${challenge.reward.badge}`,\n                    color: \"secondary\",\n                    variant: \"outlined\",\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 23\n                }, this), isParticipating(challenge) && /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    mt: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"textSecondary\",\n                    children: [\"Progress: \", getProgress(challenge), \"%\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                    variant: \"determinate\",\n                    value: getProgress(challenge),\n                    sx: {\n                      mt: 1,\n                      height: 8,\n                      borderRadius: 4\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                children: !isParticipating(challenge) ? /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  onClick: () => joinChallenge(challenge._id),\n                  startIcon: /*#__PURE__*/_jsxDEV(GroupIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 38\n                  }, this),\n                  children: \"Join Challenge\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  onClick: () => updateProgress(challenge._id, getProgress(challenge) + 10),\n                  disabled: getProgress(challenge) >= 100,\n                  children: \"Update Progress\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this)\n          }, challenge._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this)\n      }, \"challenges\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          x: 20\n        },\n        animate: {\n          opacity: 1,\n          x: 0\n        },\n        exit: {\n          opacity: 0,\n          x: -20\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 2,\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: leaderboard.map((player, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                bgcolor: player.username === user.username ? 'action.selected' : 'transparent'\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    bgcolor: index < 3 ? 'primary.main' : 'secondary.main'\n                  },\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: player.username,\n                secondary: `Level ${player.level} • ${player.experience} XP • ${player.badges} Badges`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  color: \"primary\",\n                  children: [player.streakPoints, \" pts\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this)]\n            }, player._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)\n      }, \"leaderboard\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n};\n_s(Challenges, \"iVi0j2KA3wxT6EG9d+NSs8b1S8Y=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Challenges;\nexport default Challenges;\nvar _c;\n$RefreshReg$(_c, \"Challenges\");","map":{"version":3,"names":["React","useState","useEffect","Grid","Paper","Typography","Box","Card","CardContent","CardActions","Button","LinearProgress","Chip","Avatar","List","ListItem","ListItemAvatar","ListItemText","Tab","Tabs","Alert","EmojiEvents","TrophyIcon","Star","StarIcon","Group","GroupIcon","motion","AnimatePresence","axios","useAuth","useNavigate","jsxDEV","_jsxDEV","Challenges","_s","token","user","navigate","challenges","setChallenges","leaderboard","setLeaderboard","activeTab","setActiveTab","error","setError","success","setSuccess","fetchChallenges","fetchLeaderboard","response","get","headers","Authorization","data","console","joinChallenge","challengeId","post","updateProgress","progress","isParticipating","challenge","participants","some","p","_id","id","getProgress","_participant$progress","participant","find","sx","textAlign","children","variant","color","fileName","_jsxFileName","lineNumber","columnNumber","onClick","mt","maxWidth","mx","gutterBottom","value","onChange","_","newValue","mb","label","div","initial","opacity","y","animate","exit","severity","onClose","mode","x","container","spacing","map","item","xs","md","display","alignItems","mr","title","paragraph","description","icon","reward","experiencePoints","size","badge","height","borderRadius","startIcon","disabled","elevation","player","index","bgcolor","username","primary","secondary","level","experience","badges","streakPoints","_c","$RefreshReg$"],"sources":["C:/Users/surya/CascadeProjects/gamified-habit-tracker/client/src/pages/Challenges.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Paper,\n  Typography,\n  Box,\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  LinearProgress,\n  Chip,\n  Avatar,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Tab,\n  Tabs,\n  Alert,\n} from '@mui/material';\nimport {\n  EmojiEvents as TrophyIcon,\n  Star as StarIcon,\n  Group as GroupIcon,\n} from '@mui/icons-material';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport axios from 'axios';\nimport { useAuth } from 'context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\n\ninterface Challenge {\n  _id: string;\n  title: string;\n  description: string;\n  type: string;\n  requirements: {\n    habitCategory?: string;\n    targetStreak?: number;\n    completionCount?: number;\n  };\n  reward: {\n    experiencePoints: number;\n    badge?: string;\n    streakBonus?: number;\n  };\n  startDate: string;\n  endDate: string;\n  participants: {\n    user: {\n      _id: string;\n      username: string;\n      level: number;\n    };\n    progress: number;\n    completed: boolean;\n  }[];\n}\n\ninterface LeaderboardPlayer {\n  _id: string;\n  username: string;\n  level: number;\n  experience: number;\n  badges: number;\n  streakPoints: number;\n}\n\nconst Challenges: React.FC = () => {\n  const { token, user } = useAuth();\n  const navigate = useNavigate();\n  const [challenges, setChallenges] = useState<Challenge[]>([]);\n  const [leaderboard, setLeaderboard] = useState<LeaderboardPlayer[]>([]);\n  const [activeTab, setActiveTab] = useState(0);\n  const [error, setError] = useState<string>('');\n  const [success, setSuccess] = useState<string>('');\n\n  useEffect(() => {\n    if (token) {\n      fetchChallenges();\n      fetchLeaderboard();\n    }\n  }, [token]);\n\n  const fetchChallenges = async () => {\n    try {\n      const response = await axios.get<Challenge[]>('http://localhost:5000/api/challenges/active', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setChallenges(response.data);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching challenges:', error);\n      setError('Failed to load challenges. Please try again later.');\n    }\n  };\n\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await axios.get<LeaderboardPlayer[]>('http://localhost:5000/api/achievements/leaderboard', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setLeaderboard(response.data);\n      setError('');\n    } catch (error) {\n      console.error('Error fetching leaderboard:', error);\n      setError('Failed to load leaderboard. Please try again later.');\n    }\n  };\n\n  const joinChallenge = async (challengeId: string) => {\n    try {\n      await axios.post(\n        `http://localhost:5000/api/challenges/${challengeId}/join`,\n        {},\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      await fetchChallenges();\n      setSuccess('Successfully joined the challenge!');\n      setError('');\n    } catch (error) {\n      console.error('Error joining challenge:', error);\n      setError('Failed to join challenge. Please try again.');\n    }\n  };\n\n  const updateProgress = async (challengeId: string, progress: number) => {\n    try {\n      await axios.post(\n        `http://localhost:5000/api/challenges/${challengeId}/progress`,\n        { progress },\n        {\n          headers: { Authorization: `Bearer ${token}` },\n        }\n      );\n      await fetchChallenges();\n      setSuccess('Progress updated successfully!');\n      setError('');\n    } catch (error) {\n      console.error('Error updating progress:', error);\n      setError('Failed to update progress. Please try again.');\n    }\n  };\n\n  const isParticipating = (challenge: Challenge) => {\n    if (!user) return false;\n    return challenge.participants.some(p => p.user._id === user.id);\n  };\n\n  const getProgress = (challenge: Challenge) => {\n    if (!user) return 0;\n    const participant = challenge.participants.find(p => p.user._id === user.id);\n    return participant?.progress ?? 0;\n  };\n\n  if (!user) {\n    return (\n      <Box sx={{ p: 3, textAlign: 'center' }}>\n        <Typography variant=\"h5\" color=\"error\">\n          Please log in to view challenges\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => navigate('/auth')}\n          sx={{ mt: 2 }}\n        >\n          Go to Login\n        </Button>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ maxWidth: 1200, mx: 'auto', p: 3 }}>\n      <Typography variant=\"h4\" gutterBottom>\n        Challenges & Leaderboard\n      </Typography>\n\n      <Tabs\n        value={activeTab}\n        onChange={(_, newValue) => setActiveTab(newValue)}\n        sx={{ mb: 3 }}\n      >\n        <Tab label=\"Active Challenges\" />\n        <Tab label=\"Leaderboard\" />\n      </Tabs>\n\n      {/* Alerts */}\n      <AnimatePresence>\n        {error && (\n          <motion.div\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n          >\n            <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError('')}>\n              {error}\n            </Alert>\n          </motion.div>\n        )}\n        {success && (\n          <motion.div\n            initial={{ opacity: 0, y: -20 }}\n            animate={{ opacity: 1, y: 0 }}\n            exit={{ opacity: 0, y: -20 }}\n          >\n            <Alert severity=\"success\" sx={{ mb: 2 }} onClose={() => setSuccess('')}>\n              {success}\n            </Alert>\n          </motion.div>\n        )}\n      </AnimatePresence>\n\n      <AnimatePresence mode=\"wait\">\n        {activeTab === 0 ? (\n          <motion.div\n            key=\"challenges\"\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: 20 }}\n          >\n            <Grid container spacing={3}>\n              {challenges.map((challenge) => (\n                <Grid item xs={12} md={6} key={challenge._id}>\n                  <Card>\n                    <CardContent>\n                      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n                        <TrophyIcon color=\"primary\" sx={{ mr: 1 }} />\n                        <Typography variant=\"h6\">{challenge.title}</Typography>\n                      </Box>\n                      <Typography color=\"textSecondary\" paragraph>\n                        {challenge.description}\n                      </Typography>\n                      <Box sx={{ mb: 2 }}>\n                        <Chip\n                          icon={<StarIcon />}\n                          label={`${challenge.reward.experiencePoints} XP`}\n                          color=\"primary\"\n                          variant=\"outlined\"\n                          size=\"small\"\n                          sx={{ mr: 1 }}\n                        />\n                        {challenge.reward.badge && (\n                          <Chip\n                            label={`Badge: ${challenge.reward.badge}`}\n                            color=\"secondary\"\n                            variant=\"outlined\"\n                            size=\"small\"\n                          />\n                        )}\n                      </Box>\n                      {isParticipating(challenge) && (\n                        <Box sx={{ mt: 2 }}>\n                          <Typography variant=\"body2\" color=\"textSecondary\">\n                            Progress: {getProgress(challenge)}%\n                          </Typography>\n                          <LinearProgress\n                            variant=\"determinate\"\n                            value={getProgress(challenge)}\n                            sx={{ mt: 1, height: 8, borderRadius: 4 }}\n                          />\n                        </Box>\n                      )}\n                    </CardContent>\n                    <CardActions>\n                      {!isParticipating(challenge) ? (\n                        <Button\n                          variant=\"contained\"\n                          onClick={() => joinChallenge(challenge._id)}\n                          startIcon={<GroupIcon />}\n                        >\n                          Join Challenge\n                        </Button>\n                      ) : (\n                        <Button\n                          variant=\"outlined\"\n                          onClick={() => updateProgress(challenge._id, getProgress(challenge) + 10)}\n                          disabled={getProgress(challenge) >= 100}\n                        >\n                          Update Progress\n                        </Button>\n                      )}\n                    </CardActions>\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </motion.div>\n        ) : (\n          <motion.div\n            key=\"leaderboard\"\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -20 }}\n          >\n            <Paper elevation={2}>\n              <List>\n                {leaderboard.map((player, index) => (\n                  <ListItem\n                    key={player._id}\n                    sx={{\n                      bgcolor: player.username === user.username ? 'action.selected' : 'transparent',\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        sx={{\n                          bgcolor: index < 3 ? 'primary.main' : 'secondary.main',\n                        }}\n                      >\n                        {index + 1}\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={player.username}\n                      secondary={`Level ${player.level} • ${player.experience} XP • ${player.badges} Badges`}\n                    />\n                    <Box>\n                      <Typography variant=\"h6\" color=\"primary\">\n                        {player.streakPoints} pts\n                      </Typography>\n                    </Box>\n                  </ListItem>\n                ))}\n              </List>\n            </Paper>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </Box>\n  );\n};\n\nexport default Challenges;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}